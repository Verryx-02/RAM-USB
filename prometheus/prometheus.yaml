# Prometheus Configuration for R.A.M.-U.S.B. Monitoring
# Scrapes metrics from Metrics-Collector service with mTLS authentication

# ===========================
# GLOBAL CONFIGURATION
# ===========================
global:
  # How frequently to scrape targets
  scrape_interval: 15s
  
  # How frequently to evaluate rules
  evaluation_interval: 15s
  
  # Scrape timeout (must be less than scrape_interval)
  scrape_timeout: 10s
  
  # External labels to attach to all time series
  external_labels:
    monitor: 'ramusb-prometheus'
    environment: 'development'  # Change to 'production' for production

# ===========================
# ALERTMANAGER CONFIGURATION
# ===========================
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - 'alertmanager:9093'  # Uncomment if using Alertmanager
      
      # TLS configuration for Alertmanager (if needed)
      # tls_config:
      #   cert_file: /prometheus/certificates/prometheus/client.crt
      #   key_file: /prometheus/certificates/prometheus/client.key
      #   ca_file: /prometheus/certificates/certification-authority/ca.crt

# ===========================
# RULE FILES
# ===========================
# Load rules once and periodically evaluate them
rule_files:
  - '/prometheus/rules/*.yml'
  # - 'alerts.yml'
  # - 'recording_rules.yml'

# ===========================
# SCRAPE CONFIGURATIONS
# ===========================
scrape_configs:
  
  # ===========================
  # Metrics-Collector Endpoint
  # ===========================
  - job_name: 'metrics-collector'
    
    # Use HTTPS with mTLS authentication
    scheme: https
    
    # Scrape interval for this job (override global)
    scrape_interval: 15s
    
    # Metrics path
    metrics_path: '/metrics'
    
    # TLS Configuration for mTLS authentication
    tls_config:
      # Client certificate for authentication
      cert_file: /prometheus/certificates/prometheus/scraper.crt
      key_file: /prometheus/certificates/prometheus/scraper.key
      
      # CA certificate to verify server
      ca_file: /prometheus/certificates/certification-authority/ca.crt
      
      # Server name for certificate verification
      server_name: 'metrics-collector'
      
      # Require TLS 1.3 minimum
      min_version: 'TLS13'
    
    # Static targets (replace with your Tailscale IP)
    static_configs:
      - targets: 
          - '100.102.186.107:8447'  # Metrics-Collector Prometheus endpoint
        labels:
          service: 'metrics-collector'
          component: 'monitoring'
    
    # Relabeling configurations
    relabel_configs:
      # Add instance label from target address
      - source_labels: [__address__]
        target_label: instance
      
      # Keep only specific metrics (optional)
      # - source_labels: [__name__]
      #   regex: 'ramusb_.*'
      #   action: keep
  
  # ===========================
  # Prometheus Self-Monitoring
  # ===========================
  - job_name: 'prometheus'
    
    # Scrape Prometheus itself
    static_configs:
      - targets: ['localhost:9090']
        labels:
          service: 'prometheus'
          component: 'monitoring'
    
    # More frequent scraping for self-monitoring
    scrape_interval: 10s
  
  # ===========================
  # Node Exporter (Optional)
  # ===========================
  # Uncomment to monitor host metrics
  # - job_name: 'node-exporter'
  #   static_configs:
  #     - targets: ['localhost:9100']
  #       labels:
  #         service: 'node-exporter'
  #         component: 'infrastructure'

# ===========================
# STORAGE CONFIGURATION
# ===========================
# Configure remote storage if needed
# remote_write:
#   - url: "http://timescaledb:5433/prometheus/write"
#     basic_auth:
#       username: metrics_user
#       password: metrics_secure_2024

# remote_read:
#   - url: "http://timescaledb:5433/prometheus/read"
#     basic_auth:
#       username: metrics_user
#       password: metrics_secure_2024